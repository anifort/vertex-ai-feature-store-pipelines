from kfp import components
from kfp.v2.dsl import Dataset, Output

def data_selector(
    project_id: str,
    dataset_id: str,
    table_name: str,
    dataset: Output[Dataset],
    dataset_location: str = "EU",
    extract_job_config: str = "{}",
) -> None:
    """
    Extract BQ table in GCS.
    Args:
        project_id: project id that will be used by the bq client
        dataset_id: dataset id that will be used by the bq client
        table_name: table name (without project id and dataset id)
        dataset: output dataset artifact generated by the operation,
        this parameter will be passed automatically by the orchestrator
        dataset_location: bq dataset location
        extract_job_config: json dumped string, containing optional parameters
        required by the bq extract operation.
        See available parameters here
        https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.job.ExtractJobConfig.html
    Returns:
        None
    """
    from google.cloud.exceptions import GoogleCloudError
    from google.cloud import bigquery
    import json
    import logging
    from google.cloud import bigquery
    client = bigquery.Client()
    
# bucket_name = 'my-bucket'

    full_table_id = f"{project_id}.{dataset_id}.{table_name}"

    extract_job_config_dict = json.loads(extract_job_config)
    table = bigquery.table.Table(table_ref=full_table_id)
    job_config = bigquery.job.ExtractJobConfig(**extract_job_config_dict)
    client = bigquery.client.Client(project=project_id, location=dataset_location)
    extract_job = client.extract_table(
        table,
        dataset.uri,
        job_config=job_config,
    )

    try:
        result = extract_job.result()
        logging.info("Table extracted, result: {}".format(result))
    except GoogleCloudError as e:
        logging.error(e)
        logging.error(extract_job.error_result)
        logging.error(extract_job.errors)
        raise e


extract_bq_to_dataset_op = components.create_component_from_func_v2(
    extract_bq_to_dataset,
    packages_to_install=["google-cloud-bigquery==2.24.1"],
)